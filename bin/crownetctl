#!/usr/bin/env python

import argparse
import logging
import os


def parse_args_as_dict(args=None):
	# parse arguments
	parser = argparse.ArgumentParser()
	parser.add_argument(
		"--params",
		action="append",
		nargs="+",
		help="Additional parameters",
		type=str,
	)

	parser.add_argument(
		"--strategy",
		dest="strategy",
		required=True,
		help="Class name of strategy. Strategy must be implemented!",
	)

	if args is None:
		ns = vars(parser.parse_args())
	else:
		ns = vars(parser.parse_args(args))

	for h in logging.root.handlers:
		logging.root.removeHandler(h)

	levels = [logging.ERROR, logging.WARN, logging.INFO, logging.DEBUG]
	if ns["silent"]:
		level_idx = 0
	else:
		level_idx = ns["verbose"]
	if ns["create_log_file"]:
		logging.basicConfig(
			level=levels[level_idx],
			format="%(asctime)s:%(module)s:%(levelname)s> %(message)s",
			filename=f"{os.getcwd()}/runner.log",
		)
	else:
		logging.basicConfig(
			level=levels[level_idx],
			format="%(asctime)s:%(module)s:%(levelname)s> %(message)s",
		)
	return ns


if __name__ == "__main__":


	if len(sys.argv) == 1:
		# default behavior of script
		config = {"strategy": "CorridorChoice", "params": None}
	else:
		# use arguments from command line
		config = parse_args_as_dict(sys.argv)

	strategy = Strategy.get_from_config(config=config)
	start_server(strategy=strategy)

	print()
